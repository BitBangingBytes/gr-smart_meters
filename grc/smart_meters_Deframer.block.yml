id: smart_meters_Deframer
label: Deframer
category: '[smart_meters]'

templates:
  imports: import smart_meters
  make: smart_meters.Deframer(${min_length}, ${max_length}, ${debug})

parameters:
- id: min_length
  label: Min length
  dtype: int
  default: 6
- id: max_length
  label: Max length
  dtype: int
  default: 300
- id: debug
  label: Console Output
  category: Debug
  hide: part
  dtype: enum
  options: ['True', 'False']
  default: 'False'


#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: pdu_in
  domain: message

outputs:
- label: pdu_out
  domain: message
  optional: true

documentation: |-
    GridStream Deframer Block:
    
    Takes in unpacked bits (00, 01, 00), and outputs PDU binary blobs. 
    10 unpacked bytes input result in one packed byte output as the start/stop bits are checked for validity and stripped off.

    min and max length refer to packed byte output length, eg. min length 10 means a minimum of 100 unpacked bytes on the input of the block will give 10 bytes at the output
#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
