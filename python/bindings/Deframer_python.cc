/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(Deframer.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(9bd5b469794a6986c04b032a33c78912)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <smart_meters/Deframer.h>
// pydoc.h is automatically generated in the build directory
#include <Deframer_pydoc.h>

void bind_Deframer(py::module& m)
{

    using Deframer    = ::gr::smart_meters::Deframer;


    py::class_<Deframer, gr::block, gr::basic_block,
        std::shared_ptr<Deframer>>(m, "Deframer", D(Deframer))

        .def(py::init(&Deframer::make),
           py::arg("min_length"),
           py::arg("max_length"),
           py::arg("debug"),
           D(Deframer,make)
        )
        



        ;




}








