/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(GridStream.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(165bafbad61976e5eff5069d1cb4a7a3)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <smart_meters/GridStream.h>
// pydoc.h is automatically generated in the build directory
#include <GridStream_pydoc.h>

void bind_GridStream(py::module& m)
{

    using GridStream    = ::gr::smart_meters::GridStream;


    py::class_<GridStream, gr::block, gr::basic_block,
        std::shared_ptr<GridStream>>(m, "GridStream", D(GridStream))

        .def(py::init(&GridStream::make),
           py::arg("crcEnable"),
           py::arg("debugEnable"),
           py::arg("timestampEnable"),
           py::arg("epochEnable"),
           py::arg("frequencyEnable"),
           py::arg("baudrateEnable"),
           py::arg("crcInitialValue"),
           py::arg("meterLanSrcID"),
           py::arg("meterLanDstID"),
           py::arg("packetTypeFilter"),
           py::arg("packetLengthFilter"),
           D(GridStream,make)
        )




        ;




}








